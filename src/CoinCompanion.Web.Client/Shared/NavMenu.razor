@using CoinCompanion.Web.Shared.ViewModels
@inject HttpClient Http
<nav class="col-md-2 d-none d-md-block bg-light sidebar">
    @if (collections == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="sidebar-sticky">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="counter">
                        <span class="oi oi-plus" aria-hidden="true"></span> Counter
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="fetchdata">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                    </NavLink>
                </li>
            </ul>
            <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
                <span>Collections</span>
            </h6>
            <ul>
                @foreach (var item in collections)
                {
                    var link = $"/collections/{item.Id}";
                    <NavLink class="nav-link" href="@link">
                        <li class="nav-item">@item.Name</li>
                    </NavLink>
                }
            </ul>
        </div>
    }
</nav>


@code {
    private CollectionViewModel[] collections = null;

    protected override async Task OnInitializedAsync()
    {
        collections = await Http.GetJsonAsync<CollectionViewModel[]>("/api/Collections/GetCollectionList");
    }

}
