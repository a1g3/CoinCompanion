@page "/collections/{Id:guid}"
@using CoinCompanion.Web.Shared.ViewModels
@inject HttpClient Http

@if (collection != null)
{
    <h3>@collection.Name</h3>
    @if (coins != null)
    {
        foreach (var coin in coins)
        {
            <div>@coin.Id</div>
            <div>@coin.FriendlyId</div>
            <div>@coin.Condition</div>
            <div>@coin.Country</div>
            <div>@coin.Mint</div>
            <div>@coin.Type</div>
            <div>@coin.Url</div>
            <div>@coin.Year</div>
            <br />
        }
    }
    else
    {
        <p>Loading Coins</p>
    }
}
else
{
    <p>Loading</p>
}


<a class="d-flex align-items-center text-muted" aria-label="Add a collection" data-toggle="modal" data-target="#exampleModalLong">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus-circle"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line></svg>
</a>

<EditCoin Coin="coin"></EditCoin>
@code {
    [Parameter]
    public Guid Id { get; set; }

    private CollectionViewModel collection = null;
    private CoinViewModel[] coins = null;
    CoinViewModel coin = new CoinViewModel();

    protected override async Task OnInitializedAsync()
    {
        collection = await Http.GetJsonAsync<CollectionViewModel>($"/api/Collections?collectionId={Id}");
        coins = await Http.GetJsonAsync<CoinViewModel[]>($"/api/collections/{Id}/coins");
    }
}
